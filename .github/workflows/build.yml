name: Building and pushing a docker image to Amazon ECR

on:
  push:
    branches:
    - develop
    - master

env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_DEFAULT_OUTPUT: json
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CONTAINER_IMAGE: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/spotlight-api

jobs:
  build-and-push:
    name: Building and pushing image to AWS ECR
    runs-on: ubuntu-latest
    steps:

    - name: Set environment for branch
      run: |
        if [[ $GITHUB_REF == 'refs/heads/master' ]]; then
            echo "DEPLOY_ENV=prod" >> "$GITHUB_ENV"
        else
            echo "DEPLOY_ENV=dev" >> "$GITHUB_ENV"
        fi

    - name: Checkout
      uses: actions/checkout@master

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: env.AWS_ACCESS_KEY_ID
        aws-secret-access-key: env.AWS_SECRET_ACCESS_KEY
        aws-region: env.AWS_DEFAULT_REGION

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and tag the Prerelease image
      if: github.ref == 'refs/heads/develop'
      run: |
        docker build \
          -t $CONTAINER_IMAGE \
          -t $CONTAINER_IMAGE:${{ github.sha }} \
          .

    - name: Push Prerelease to ECR
      if: github.ref == 'refs/heads/develop'
      run: |
        docker push $CONTAINER_IMAGE && \
        docker push $CONTAINER_IMAGE:${{ github.sha }}

    - name: Pull Latest Image Manifest to Deploy to Prod
      if: github.ref == 'refs/heads/master'
      run: |
        MANIFEST=$(aws ecr batch-get-image \
          --repository-name spotlight-api \
          --image-ids imageTag=latest \
          --query 'images[].imageManifest' \
          --output text) && \

          aws ecr put-image \
          --repository-name spotlight-api \
          --image-tag production \
          --image-manifest "$MANIFEST"


    - name: Update kubeconfig with cluster
      run: |
        aws eks --region ${{ env.AWS_DEFAULT_REGION }} update-kubeconfig --name spotlight-${DEPLOY_ENV}-cluster

    - name: Update images
      run: |
        kubectl set image deployments/api-deployment \
        spotlight-api=$CONTAINER_IMAGE:latest


